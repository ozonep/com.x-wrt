#!/bin/sh

case "$ACTION" in
	add)
		case "$INTERFACE" in
			br-lanap|br-lanrelay|br-lan)
				lanip=$(ubus call network.interface.lan status | jsonfilter -e "@['ipv4-address'][0]['address']")
				hname=$(awk -F= '/default_mac_addr/ { gsub(":", "", $2); print $2 }' /dev/natcap_ctl)

				test -n "$lanip" && test -n "$hname" || return 0

				old_lanip=$(uci get dhcp.ec2ns.name)
				old_hname=$(uci get dhcp.ec2ns.name)
				[ "${lanip}" = "${old_lanip}" ] && [ "${hname}" = "${old_hname}" ] || {
					uci set dhcp.ec2ns=domain
					uci set dhcp.ec2ns.name="$hname.dns.x-wrt.com"
					uci set dhcp.ec2ns.ip="$lanip"
					uci commit dhcp
					/etc/init.d/dnsmasq reload
				}
			;;
		esac
	;;
	ifup|ifupdate)
		case "$DEVICE" in
			br-lanap|br-lanrelay|br-lan)
				lanip=$(ubus call network.interface.lan status | jsonfilter -e "@['ipv4-address'][0]['address']")
				hname=$(awk -F= '/default_mac_addr/ { gsub(":", "", $2); print $2 }' /dev/natcap_ctl)

				test -n "$lanip" && test -n "$hname" || return 0

				old_lanip=$(uci get dhcp.ec2ns.name)
				old_hname=$(uci get dhcp.ec2ns.name)
				[ "${lanip}" = "${old_lanip}" ] && [ "${hname}" = "${old_hname}" ] || {
					uci set dhcp.ec2ns=domain
					uci set dhcp.ec2ns.name="$hname.dns.x-wrt.com"
					uci set dhcp.ec2ns.ip="$lanip"
					uci commit dhcp
					/etc/init.d/dnsmasq reload
				}
			;;
		esac
	;;
esac
